name: Windows mingw64 common workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      compiler:
        description: 'Branch or tag of ocaml/ocaml to use as compiler'
        type: string
        default: '5.0.0'
      compiler_branch:
        description: 'Source branch of the compiler, to set up caching properly (must be set if CI is not using a tagged release of OCaml)'
        type: string
        default: ''
      only_test:
        description: 'Only test to run (eg “src/array/lin_tests.exe”); whole suite is run if empty'
        type: string
        default: ''
      seed:
        description: 'Seed for the only test'
        type: string
        default: ''
      repeats:
        description: 'Number of test attempts'
        type: string
        default: '2'

jobs:
  build:
    runs-on: windows-latest

    env:
      COMPILER:  ${{ inputs.compiler }}
      OCAML_COMPILER_BRANCH: ${{ inputs.compiler_branch }}
      ONLY_TEST: ${{ inputs.only_test }}
      SEED: ${{ inputs.seed }}
      REPEATS: ${{ inputs.repeats }}
      QCHECK_MSG_INTERVAL: '60'
      OPAMERRLOGLEN: 0

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pick up a robust cache prefix
        id: compute_prefix
        shell: bash
        run: |
          if [ -n "$OCAML_COMPILER_BRANCH" ]; then
            cache_prefix="$(git ls-remote --heads https://github.com/ocaml/ocaml.git "$OCAML_COMPILER_BRANCH" | cut -f 1 | head -n 1)"
          else
            cache_prefix=v1
          fi
          echo "cache_prefix=$cache_prefix" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"

      - name: Install OCaml compiler ${{ env.COMPILER }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ env.COMPILER }}
          opam-repositories: |
            dra27: https://github.com/dra27/opam-repository.git#windows-5.0
            override: https://github.com/shym/custom-opam-repository.git
            default: https://github.com/fdopen/opam-repository-mingw.git#opam2
            upstream: https://github.com/ocaml/opam-repository.git
            alpha: https://github.com/kit-ty-kate/opam-alpha-repository.git
          opam-depext: false
          dune-cache: true
          cache-prefix: ${{ steps.compute_prefix.outputs.cache_prefix }}

      - name: Install Multicore Tests dependencies
        run: |
          opam install . --deps-only --with-test

      - name: Show environment
        run: |
          opam exec -- ocamlopt -config
          opam config list
          opam exec -- dune printenv

      - name: Build the test suite
        run: opam exec -- dune build
        if: env.ONLY_TEST == ''

      - name: Run the test suite
        run: opam exec -- dune runtest -j1 --no-buffer --display=quiet --cache=disabled --error-reporting=twice
        if: env.ONLY_TEST == ''

      - name: Run only one test
        run: |
          $ErrorActionPreference = 'Continue'
          $failures = 0
          for($i = 1; $i -le "${env:REPEATS}"; $i++) {
            if("${env:SEED}" -eq "") {
              opam exec -- dune exec "${env:ONLY_TEST}" -- -v
              if($? -eq 0) { $failures += 1 }
            } else {
              opam exec -- dune exec "${env:ONLY_TEST}" -- -v -s "${env:SEED}"
              if($? -eq 0) { $failures += 1 }
            }
          }
          echo "Test failed $failures times"
        if: env.ONLY_TEST != ''
