name: Windows Cygwin tests for threadomain

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    env:
      COMPILER:  'trunk'
      ONLY_TEST: 'src/threadomain/threadomain.exe'
      REPEATS: '50'
      QCHECK_MSG_INTERVAL: '60'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install opam etc. with a temporary compiler
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: 4.14
          opam-repositories: |
            default: https://github.com/fdopen/opam-repository-mingw.git#opam2
            override: https://github.com/shym/custom-opam-repository.git#windows
            upstream: https://github.com/ocaml/opam-repository.git
            alpha: https://github.com/kit-ty-kate/opam-alpha-repository.git
          opam-pin: false
          opam-depext: false

      - name: Build and install the OCaml ${{ env.COMPILER }} compiler in a `ci` switch
        run: |
          opam switch create ci --empty --no-switch --repositories=default,override,upstream,alpha
          git clone https://github.com/ocaml/ocaml -b $Env:COMPILER --depth=1 --recurse-submodules
          cd ocaml
          git submodule update --remote
          opam install --switch=ci .
          git log
          cd ..
          rmdir -Recurse -Force ocaml

      - name: Show environment
        run: |
          opam exec --switch=ci -- ocamlopt -config
          opam config list --switch=ci

      - name: Install Multicore Tests dependencies
        run: |
          opam pin --switch=ci add "https://github.com/shym/ocamlfind.git#fix-win"
          opam install --switch=ci qcheck-core

      - name: Build the test suite
        run: opam exec --switch=ci -- dune build
        if: env.ONLY_TEST == ''

      - name: Run the test suite
        run: opam exec --switch=ci -- dune runtest -j1 --no-buffer --display=quiet --cache=disabled --error-reporting=twice
        if: env.ONLY_TEST == ''

      - name: Run only one test
        run: |
          $ErrorActionPreference = 'Continue'
          $failures = 0
          for($i = 1; $i -le "${env:REPEATS}"; $i++) {
            if("${env:SEED}" -eq "") {
              opam exec --switch=ci -- dune exec "${env:ONLY_TEST}" -- -v
              if($? -eq 0) { $failures += 1 }
            } else {
              opam exec --switch=ci -- dune exec "${env:ONLY_TEST}" -- -v -s "${env:SEED}"
              if($? -eq 0) { $failures += 1 }
            }
          }
          echo "Test failed $failures times"
        if: env.ONLY_TEST != ''
